custom:
  default_stage: production
  current_stage: ${opt:stage, self:custom.default_stage}

service: ${file(./config/${self:custom.current_stage}.json):lamda_service_name}

provider:
  name: aws
  runtime: python3.6
  stage: ${self:custom.current_stage}
  region: ${file(./config/${self:custom.current_stage}.json):region}
  environment:
    REGION: ${file(./config/${self:custom.current_stage}.json):region}
    ALB_LOGS_DESTINATION_S3_BUCKET_NAME: ${file(./config/${self:custom.current_stage}.json):alb_logs_destination_s3_bucket_name}
    ALB_LOGS_DESTINATION_S3_BUCKET_PREFIX: ${file(./config/${self:custom.current_stage}.json):alb_logs_destination_s3_bucket_prefix}
    ATHENA_DB_NAME: ${file(./config/${self:custom.current_stage}.json):athena_db_name}
    ATHENA_TABLE_NAME: ${file(./config/${self:custom.current_stage}.json):athena_table_name}
    ATHENA_TABLE_CREATION_LOGS_S3_PATH: ${file(./config/${self:custom.current_stage}.json):athena_table_creation_logs_s3_path}
    ATHENA_DISK_REPAIR_LOGS_S3_PATH: ${file(./config/${self:custom.current_stage}.json):athena_disk_repair_logs_s3_path}
    ATHENA_QUERY_EXECUTION_LOGS_S3_PATH: ${file(./config/${self:custom.current_stage}.json):athena_query_execution_logs_s3_path}
    ATHENA_QUERY_EXECUTION_TIME_S3_KEY: ${file(./config/${self:custom.current_stage}.json):athena_query_execution_time_s3_key}
    ATHENA_IS_DB_CREATED_S3_KEY: ${file(./config/${self:custom.current_stage}.json):athena_is_db_created_s3_key}
    LOGZIO_URL: ${file(./config/${self:custom.current_stage}.json):logzio_url}
    LOGZIO_TOKEN: ${file(./config/${self:custom.current_stage}.json):logzio_token}


functions:
  copyALBLogs:
    handler: handlers.fetch_alb_logs_from_s3.copy_alb_logs
    role: ALBParserRole
  repairDiskAthena:
    handler: handlers.execute_athena_queries.repair_disk_athena
    role: ALBParserRole
    events:
      - schedule: cron(6 0 * * ? *)
  fetchDataFromAthena:
    handler: handlers.execute_athena_queries.fetch_data_from_athena
    role: ALBParserRole
    timeout: 30
    events:
      - schedule: rate(5 minutes)

resources:
  Resources:
    PushALBLogsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${file(./config/${self:custom.current_stage}.json):alb_logs_destination_s3_bucket_name}
    ALBParserRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
          Version: '2012-10-17'
        Path: /
        Policies:
        - PolicyDocument:
            Statement:
            - Action:
              - 's3:*'
              Effect: Allow
              Resource: arn:aws:s3:::${file(./config/${self:custom.current_stage}.json):alb_logs_destination_s3_bucket_name}
            - Action:
              - 's3:*'
              Effect: Allow
              Resource: arn:aws:s3:::${file(./config/${self:custom.current_stage}.json):alb_logs_destination_s3_bucket_name}/*
            - Action:
              - s3:ListAllMyBuckets
              - s3:ListBucket
              - s3:GetBucketLocation
              - s3:GetObjectVersion
              - s3:GetBucketVersioning
              - s3:ListBucketVersions
              - s3:GetObject
              Effect: Allow
              Resource: arn:aws:s3:::${file(./config/${self:custom.current_stage}.json):alb_logs_source_s3_bucket_path}*
            - Action:
              - logs:CreateLogStream
              - logs:CreateLogGroup
              - logs:PutLogEvents
              Effect: Allow
              Resource: arn:aws:logs:${file(./config/${self:custom.current_stage}.json):region}:*:*
            - Action:
              - athena:*
              Effect: Allow
              Resource: '*'
            - Action:
              - glue:CreateDatabase
              - glue:DeleteDatabase
              - glue:GetDatabase
              - glue:GetDatabases
              - glue:UpdateDatabase
              - glue:CreateTable
              - glue:DeleteTable
              - glue:BatchDeleteTable
              - glue:UpdateTable
              - glue:GetTable
              - glue:GetTables
              - glue:BatchCreatePartition
              - glue:CreatePartition
              - glue:DeletePartition
              - glue:BatchDeletePartition
              - glue:UpdatePartition
              - glue:GetPartition
              - glue:GetPartitions
              - glue:BatchGetPartition
              Effect: Allow
              Resource: '*'

            - Action:
              - s3:GetBucketLocation
              - s3:GetObject
              - s3:ListBucket
              - s3:ListBucketMultipartUploads
              - s3:ListMultipartUploadParts
              - s3:AbortMultipartUpload
              - s3:CreateBucket
              - s3:PutObject
              Effect: Allow
              Resource: arn:aws:s3:::aws-athena-query-results-*

            - Action:
              - s3:GetObject
              Effect: Allow
              Resource: arn:aws:s3:::athena-examples*
            Version: '2012-10-17'
          PolicyName: ${file(./config/${self:custom.current_stage}.json):lamda_service_name}-execution-policy
        RoleName: ${file(./config/${self:custom.current_stage}.json):lamda_service_name}-execution-role
      